#!/usr/bin/env node
(()=>{var $n=Object.create;var Fe=Object.defineProperty;var Ln=Object.getOwnPropertyDescriptor;var Un=Object.getOwnPropertyNames;var Fn=Object.getPrototypeOf,qn=Object.prototype.hasOwnProperty;var a=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var ut=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Mn=(e,t)=>{for(var r in t)Fe(e,r,{get:t[r],enumerable:!0})},Vn=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Un(t))!qn.call(e,o)&&o!==r&&Fe(e,o,{get:()=>t[o],enumerable:!(n=Ln(t,o))||n.enumerable});return e};var l=(e,t,r)=>(r=e!=null?$n(Fn(e)):{},Vn(t||!e||!e.__esModule?Fe(r,"default",{value:e,enumerable:!0}):r,e));var xe=ut((Js,nr)=>{"use client";var go=Object.create,Ie=Object.defineProperty,ho=Object.getOwnPropertyDescriptor,vo=Object.getOwnPropertyNames,yo=Object.getPrototypeOf,wo=Object.prototype.hasOwnProperty,Po=(e,t)=>{for(var r in t)Ie(e,r,{get:t[r],enumerable:!0})},Gt=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of vo(t))!wo.call(e,o)&&o!==r&&Ie(e,o,{get:()=>t[o],enumerable:!(n=ho(t,o))||n.enumerable});return e},Io=(e,t,r)=>(r=e!=null?go(yo(e)):{},Gt(t||!e||!e.__esModule?Ie(r,"default",{value:e,enumerable:!0}):r,e)),xo=e=>Gt(Ie({},"__esModule",{value:!0}),e),Kt={};Po(Kt,{DevToolsContext:()=>rr,DevToolsContextProvider:()=>Eo,DevtoolsEvent:()=>Qt,hooksByScope:()=>bo,receive:()=>tr,scopes:()=>Zt,send:()=>er});nr.exports=xo(Kt);var Qt=(e=>(e.RELOAD="devtools:reload",e.DEVTOOLS_INIT="devtools:init",e.DEVTOOLS_HANDSHAKE="devtools:handshake",e.DEVTOOLS_ALREADY_CONNECTED="devtools:already-connected",e.ACTIVITY="devtools:send-activity",e.DEVTOOLS_ACTIVITY_UPDATE="devtools:activity-update",e.DEVTOOLS_CONNECTED_APP="devtools:connected-app",e.DEVTOOLS_DISCONNECTED_APP="devtools:disconnected-app",e.DEVTOOLS_HIGHLIGHT_IN_MONITOR="devtools:highlight-in-monitor",e.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION="devtools:highlight-in-monitor-action",e.DEVTOOLS_LOGIN_SUCCESS="devtools:login-success",e.DEVTOOLS_RELOAD_AFTER_LOGIN="devtools:reload-after-login",e))(Qt||{}),Zt={useCan:"access-control",useLog:"audit-log",useLogList:"audit-log",useCreate:"data",useCreateMany:"data",useCustom:"data",useCustomMutation:"data",useDelete:"data",useDeleteMany:"data",useInfiniteList:"data",useList:"data",useMany:"data",useOne:"data",useUpdate:"data",useUpdateMany:"data",useForgotPassword:"auth",useGetIdentity:"auth",useIsAuthenticated:"auth",useLogin:"auth",useLogout:"auth",useOnError:"auth",usePermissions:"auth",useRegister:"auth",useUpdatePassword:"auth"},bo=Object.entries(Zt).reduce((e,[t,r])=>(e[r]||(e[r]=[]),e[r].push(t),e),{}),Z=Io(a("react"));async function er(e,t,r){if(e.readyState!==e.OPEN){await new Promise(n=>{let o=()=>{e.send(JSON.stringify({event:t,payload:r})),n(),e.removeEventListener("open",o)};e.addEventListener("open",o)});return}e.send(JSON.stringify({event:t,payload:r}))}function tr(e,t,r){let n=o=>{let{event:i,payload:c}=JSON.parse(o.data);t===i&&r(c)};return e.addEventListener("message",n),()=>{e.removeEventListener("message",n)}}var rr=Z.default.createContext({__devtools:!1,port:5002,url:"localhost",secure:!1,ws:null}),Eo=({__devtools:e,port:t,children:r})=>{let[n,o]=Z.default.useState({__devtools:e??!1,port:t??5002,url:"localhost",secure:!1,ws:null}),[i,c]=Z.default.useState(null);Z.default.useEffect(()=>{let p=new WebSocket(`${n.secure?"wss":"ws"}://localhost:${n.port}`),d=tr(p,"devtools:handshake",u=>{o(v=>({...v,devtoolsUrl:u.url})),d()});return p.addEventListener("open",()=>{n.__devtools||er(p,"devtools:init",{url:window.location.origin})}),c(p),()=>{d(),p.close(1e3,window.location.origin)}},[]);let s=Z.default.useMemo(()=>({...n,ws:i}),[n,i]);return Z.default.createElement(rr.Provider,{value:s},r)}});var gr=ut((Ks,fr)=>{var Ro=Object.create,Re=Object.defineProperty,Co=Object.getOwnPropertyDescriptor,To=Object.getOwnPropertyNames,Ao=Object.getPrototypeOf,ko=Object.prototype.hasOwnProperty,Oo=(e,t)=>{for(var r in t)Re(e,r,{get:t[r],enumerable:!0})},cr=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of To(t))!ko.call(e,o)&&o!==r&&Re(e,o,{get:()=>t[o],enumerable:!(n=Co(t,o))||n.enumerable});return e},y=(e,t,r)=>(r=e!=null?Ro(Ao(e)):{},cr(t||!e||!e.__esModule?Re(r,"default",{value:e,enumerable:!0}):r,e)),So=e=>cr(Re({},"__esModule",{value:!0}),e),lr={};Oo(lr,{server:()=>_i});fr.exports=So(lr);var No=y(a("express")),P=xe(),_o=y(a("express")),or=y(a("path")),Do=e=>{e.use(_o.default.static(or.default.join(__dirname,"client"))),e.use((t,r,n)=>{if(t.path.startsWith("/api")||t.path.startsWith("/open-in-editor"))return n();r.status(200).sendFile(or.default.join(`${__dirname}/client/index.html`))})},jo=y(a("ws")),Je="https://cloud2.refine.dev",$o="https://raw.githubusercontent.com/refinedev/refine/master/packages/devtools-server/FEED.md",ir=xe(),be=a("chalk"),Lo=()=>{let e=new jo.default.Server({port:5002}).on("error",t=>{(t==null?void 0:t.code)==="EADDRINUSE"?console.error(`
${be.cyanBright.bold("\u2717 ")}${(0,be.bold)("refine devtools")} failed to start. Port 5002 is already in use, please make sure no other devtools server is running
`):console.error(`
${be.cyanBright.bold("\u2717 ")}${(0,be.bold)("error from refine devtools")}`,t),process.exit(1)});return e.on("connection",t=>{(0,ir.send)(t,ir.DevtoolsEvent.DEVTOOLS_HANDSHAKE,{url:"http://localhost:5001"}),t.on("close",()=>{t.terminate()})}),process.on("SIGTERM",()=>{e.close(()=>{})}),e},Ys=a("lodash"),Xs=xe(),Gs=a("ws"),Uo=()=>0,W=a("chalk"),Fo=e=>{let t=e.listen(5001,()=>{}).on("error",r=>{(r==null?void 0:r.code)==="EADDRINUSE"?console.error(`
${W.cyanBright.bold("\u2717 ")}${(0,W.bold)("refine devtools")} failed to start. Port 5001 is already in use, please make sure no other devtools server is running
`):console.error(`
${W.cyanBright.bold("\u2717 ")}${(0,W.bold)("error from refine devtools")}`,r),process.exit(1)}).on("listening",()=>{console.log(`
${W.cyanBright.bold("\u2713 ")}${(0,W.bold)("refine devtools")} is running at port ${W.cyanBright.bold(5001)}
`)});process.on("SIGTERM",()=>{t.close(()=>{})})},qo={connectedApp:null,clientWs:null,devtoolsWsClients:[],appWsClients:[],activities:[],packages:[]},Mo=()=>({...qo}),Vo=a("express"),Bo=y(a("lodash/uniq")),Wo=y(a("node-fetch")),zo=y(a("gray-matter")),ze=a("marked"),He=y(a("sanitize-html")),Ho=e=>e.split("---section").slice(1).map(t=>`---section${t}`),Jo=e=>{let t=new ze.marked.Renderer;t.link=function(...n){return ze.marked.Renderer.prototype.link.apply(this,n).replace(/^<a/,'<a target="_blank" rel="noopener noreferrer"')};let r=(0,ze.marked)(e,{renderer:t});return(0,He.default)(r,{allowedTags:He.default.defaults.allowedTags.concat(["img"]),allowedAttributes:{...He.default.defaults.allowedAttributes,img:["src"]}})},Yo=e=>{let t=(0,zo.default)(e.replace("---section","---"));return{...t.data,content:Jo(t.content)}},Xo=async()=>{try{return(await(0,Wo.default)($o)).text()}catch{return""}},Go=async()=>{try{let e=await Xo();return Ho(e).map(Yo)}catch{return[]}},Ko=y(a("fs")),Qo=y(a("path")),Zo=y(a("globby")),ei=async e=>{try{let t=await(0,Zo.default)(`node_modules/${e}/package.json`,{onlyFiles:!0}),r=null;try{let n=a.resolve(Qo.default.join(e,"package.json"));n&&(r=n)}catch{}return[...t,...r?[r]:[]][0]??null}catch{return null}},ti=async e=>{try{let t=await ei(e);if(!t)return null;let r=JSON.parse(Ko.default.readFileSync(t,{encoding:"utf-8"}));return{name:r.name,version:r.version,description:r.description}}catch{return null}},ri=y(a("path")),ni=a("fs-extra"),dr=async(e=process.cwd())=>{let t=await(0,ni.readJSON)(ri.default.join(e,"package.json"),{encoding:"utf-8"});return Object.keys(t.dependencies).filter(r=>r.startsWith("@refinedev/"))},oi=e=>e.replace("@refinedev/","https://c.refine.dev/"),ii=e=>"https://refine.dev/docs/api-reference/general-concepts/",ai=async e=>{try{let t=await dr(e);return await Promise.all(t.map(async r=>{let n=await ti(r);return{name:r,currentVersion:n==null?void 0:n.version,description:n==null?void 0:n.description,changelog:oi(r),documentation:ii(r)}}))}catch{return[]}},I=y(a("dedent")),si=[{name:"@refinedev/ably",description:"Ably integration for refine",install:"npm install @refinedev/ably",usage:(0,I.default)(`
            import { liveProvider, Ably } from "@refinedev/ably";

            export const ablyClient = new Ably.Realtime("YOUR_API_TOKEN");

            const App = () => {
                return (
                    <Refine
                        liveProvider={liveProvider(ablyClient)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
        `.trim())},{name:"@refinedev/airtable",description:"Airtable integration for refine",install:"npm install @refinedev/airtable",usage:(0,I.default)(`
            import dataProvider from "@refinedev/airtable";

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider("API_KEY", "BASE_ID")}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/antd",description:"Ant Design integration for refine",install:"npm install @refinedev/antd antd",usage:(0,I.default)(`
            import { ThemedLayoutV2 } from "@refinedev/antd";

            import "@refinedev/antd/dist/reset.css";

            const App = () => {
                return (
                    <Refine
                        /* ... */
                    >
                        <ThemedLayoutV2>
                            {/* ... */}
                        </ThemedLayoutV2>
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/appwrite",description:"Appwrite integration for refine",install:"npm install @refinedev/appwrite",usage:(0,I.default)(`
            import { dataProvider, liveProvider, Account, Appwrite, Storage } from "@refinedev/appwrite";

            const appwriteClient = new Appwrite();
            appwriteClient.setEndpoint("API_URL").setProject("PROJECT_ID");

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(appwriteClient, { databaseId: "default" })}
                        liveProvider={liveProvider(appwriteClient, { databaseId: "default" })}
                        /* ... */
                    >
                        <ThemedLayout>
                            {/* ... */}
                        </ThemedLayout>
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/chakra-ui",description:"Chakra UI integration for refine",install:"npm install @refinedev/chakra-ui @chakra-ui/react @emotion/react @emotion/styled framer-motion",usage:(0,I.default)(`
            import { ThemedLayoutV2 } from "@refinedev/chakra-ui";
            import { ChakraProvider } from "@chakra-ui/react";

            const App = () => {
                return (
                        <ChakraProvider>
                        <Refine
                            /* ... */
                        >
                            <ThemedLayoutV2>
                                {/* ... */}
                            </ThemedLayoutV2>
                        </Refine>
                    </ChakraProvider>
                );
            };
            `.trim())},{name:"@refinedev/graphql",description:"GraphQL integration for refine",install:"npm install @refinedev/graphql",usage:(0,I.default)(`
            import dataProvider, { GraphQLClient } from "@refinedev/graphql";

            const client = new GraphQLClient("YOUR_API_URL");

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(client)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/hasura",description:"GraphQL integration for refine",install:"npm install @refinedev/hasura",usage:(0,I.default)(`
            import dataProvider, { GraphQLClient } from "@refinedev/hasura";

            const client = new GraphQLClient("HASURA_API_URL", {
                headers: {
                    "x-hasura-role": "public",
                },
            });

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(client)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/inferencer",description:"Auto generate views based on your APIs with refine",install:"npm install @refinedev/inferencer",usage:(0,I.default)(`
        import { AntdInferencer } from "@refinedev/inferencer/antd";

        const App = () => {
            return (
                <Refine
                    /* ... */
                >
                    <AntdInferencer action="list" resource="posts" />
                </Refine>
            );
        };
        `.trim())},{name:"@refinedev/kbar",description:"Command palette integration with kbar for refine",install:"npm install @refinedev/kbar",usage:(0,I.default)(`
            import { RefineKbar, RefineKbarProvider } from "@refinedev/kbar";

            const App = () => {
                return (
                    <RefineKbarProvider>
                        <Refine
                            /* ... */
                        >
                            <RefineKbar />
                        </Refine>
                    </RefineKbarProvider>
                );
            };
        `.trim())},{name:"@refinedev/mantine",description:"Mantine UI integration for refine",install:"npm install @refinedev/mantine @refinedev/react-table @mantine/core @mantine/hooks @mantine/form @mantine/notifications @emotion/react @tabler/icons",usage:(0,I.default)(`
            import { ThemedLayoutV2 } from "@refinedev/mantine";
            import { MantineProvider } from "@mantine/core";

            const App = () => {
                return (
                    <MantineProvider>
                        <Refine
                            /* ... */
                        >
                            <ThemedLayoutV2>
                                {/* ... */}
                            </ThemedLayoutV2>
                        </Refine>
                    </MantineProvider>
                );
            };
            `.trim())},{name:"@refinedev/medusa",description:"Medusa store integration for refine",install:"npm install @refinedev/medusa",usage:(0,I.default)(`
            import dataProvider, { authProvider } from "@refinedev/medusa";

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider("API_URL")}
                        authProvider={authProvider("API_URL")}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/mui",description:"Material UI integration for refine",install:"npm install @refinedev/mui @refinedev/react-hook-form @mui/material @mui/lab @mui/x-data-grid @emotion/react @emotion/styled react-hook-form",usage:(0,I.default)(`
            import { ThemedLayoutV2 } from "@refinedev/mui";

            import CssBaseline from "@mui/material/CssBaseline";
            import GlobalStyles from "@mui/material/GlobalStyles";
            import { ThemeProvider } from "@mui/material/styles";

            const App = () => {
                return (
                    <ThemeProvider>
                        <CssBaseline />
                        <GlobalStyles styles={{ html: { WebkitFontSmoothing: "auto" } }} />
                        <Refine
                            /* ... */
                        >
                            <ThemedLayoutV2>
                                {/* ... */}
                            </ThemedLayoutV2>
                        </Refine>
                    </ThemeProvider>
                );
            };
            `.trim())},{name:"@refinedev/nestjs-query",description:"NestJS Query data provider integration for refine",install:"npm install @refinedev/nestjs-query graphql-ws",usage:(0,I.default)(`
            import dataProvider, {
                GraphQLClient,
                liveProvider,
            } from "@refinedev/nestjs-query";

            import { createClient } from "graphql-ws";

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(new GraphQLClient( "API_URL" ))}
                        liveProvider={liveProvider(createClient({ url: "WS_URL" }))}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/nestjsx-crud",description:"NestJSX CRUD data provider integration for refine",install:"npm install @refinedev/nestjsx-crud",usage:(0,I.default)(`
            import dataProvider from "@refinedev/nestjsx-crud";

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider("API_URL")}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/react-hook-form",description:"React Hook Form integration for refine",install:"npm install @refinedev/react-hook-form react-hook-form",usage:(0,I.default)(`
            import { useForm } from "@refinedev/react-hook-form";

            const EditPost = () => {
                const {
                    register,
                    handleSubmit,
                    formState,
                    refineCore,
                } = useForm({
                    refineCoreProps: {
                        resource: "posts",
                        id: "1",
                    },
                });

                return /* ... */
            };
            `.trim())},{name:"@refinedev/react-table",description:"Tanstack React Table integration for refine",install:"npm install @refinedev/react-table @tanstack/react-table",usage:(0,I.default)(`
            import { useTable } from "@refinedev/react-table";

            import { ColumnDef, flexRender } from "@tanstack/react-table";

            const EditPost = () => {
                const columns = React.useMemo<ColumnDef<IPost>[]>(
                    () => [
                        {
                            id: "id",
                            header: "ID",
                            accessorKey: "id",
                        },
                        {
                            id: "title",
                            header: "Title",
                            accessorKey: "title",
                            meta: {
                                filterOperator: "contains",
                            },
                        },
                ], []);

                const tableInstance = useTable({
                    columns,
                    refineCoreProps: {
                        resource: "posts",
                    }
                });

                return /* ... */
            };
            `.trim())},{name:"@refinedev/simple-rest",description:"Data provider integration for REST APIs with refine",install:"npm install @refinedev/simple-rest",usage:(0,I.default)(`
            import dataProvider from "@refinedev/simple-rest";

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider("API_URL")}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/supabase",description:"Data provider and live provider integrations for Supabase with refine",install:"npm install @refinedev/supabase",usage:(0,I.default)(`
            import { dataProvider, liveProvider, createClient } from "@refinedev/supabase";

            const supabaseClient = createClient("SUPABASE_URL", "SUPABASE_KEY");

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(supabaseClient)}
                        liveProvider={liveProvider(supabaseClient)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/strapi",description:"Strapi integration of refine",install:"npm install @refinedev/strapi axios",usage:(0,I.default)(`
            import { DataProvider, AuthHelper } from "@refinedev/strapi";

            const axiosInstance = axios.create();
            const strapiAuthHelper = AuthHelper("API_URL");

            const App = () => {
                return (
                    <Refine
                        dataProvider={DataProvider("API_URL", axiosInstance)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/strapi-v4",description:"StrapiV4 integration of refine",install:"npm install @refinedev/strapi-v4 axios",usage:(0,I.default)(`
            import { DataProvider, AuthHelper } from "@refinedev/strapi-v4";

            const axiosInstance = axios.create();
            const strapiAuthHelper = AuthHelper("API_URL");

            const App = () => {
                return (
                    <Refine
                        dataProvider={DataProvider("API_URL", axiosInstance)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())}],ci=async e=>{let t=await dr(e);return si.filter(r=>!t.includes(r.name))},li=y(a("preferred-pm")),di=y(a("execa")),pi=async(e,t=process.cwd())=>{try{let{name:r}=await(0,li.default)(t)??{name:"npm"},{failed:n}=await(0,di.default)(r??"npm",["install",...e.map(o=>`${o}@latest`)]);return!n}catch{return!1}},mi=y(a("execa")),ui=async e=>{try{let{stdout:t}=await(0,mi.default)("npm",["view",e,"name","version","--json"]);return JSON.parse(t)}catch{return{name:e}}},fi=a("fs-extra"),gi=y(a("path")),pr=async(e=process.cwd())=>{var t;try{let r=await(0,fi.readJSON)(gi.default.join(e,"package.json"),{encoding:"utf-8"});return((t=r==null?void 0:r.refine)==null?void 0:t.projectId)||!1}catch{return null}},hi=y(a("execa")),vi=async(e,t=process.cwd())=>{try{return hi.default.sync("npm",["pkg","set",`refine.projectId=${e}`],{cwd:t}),!0}catch{return null}},yi=y(a("execa")),ar=y(a("path")),wi=async(e,t=process.cwd())=>{try{let r=a.resolve(".bin/jscodeshift"),n=yi.default.sync(r,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${ar.default.resolve(ar.default.join(__dirname,"..","src","project-id","transform.ts"))}`,"--ignore-pattern=**/.cache/**","--ignore-pattern=**/node_modules/**","--ignore-pattern=**/build/**","--ignore-pattern=**/dist/**","--ignore-pattern=**/.next/**",`--__projectId=${e}`],{cwd:t,timeout:1e3*10});n.stderr&&console.error(n.stderr)}catch(r){console.error(r)}},Pi=async(e,t=process.cwd())=>{try{return await Promise.all([vi(e,t),wi(e,t)]),!0}catch{return!1}},Ii=(e,t)=>{e.use("/api",(0,Vo.json)()),e.get("/api/connected-app",(c,s)=>{s.json({url:t.connectedApp})}),e.get("/api/activities",(c,s)=>{let{offset:p=0,limit:d=t.activities.length}=c.query;s.setHeader("x-total-count",t.activities.length),s.json({data:t.activities.slice(Number(p),Number(d))})}),e.get("/api/activities/reset",(c,s)=>{t.activities=[],s.json({success:!0})}),e.get("/api/unique-trace-items",(c,s)=>{s.header("Access-Control-Allow-Origin","*"),s.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept");let p=t.activities.flatMap(u=>{var v;return((v=u.trace)==null?void 0:v.map(b=>b.function).filter(Boolean))??[]}),d=(0,Bo.default)(p);s.setHeader("x-total-count",d.length),s.json({data:d})});let r=null;e.get("/api/installed-packages",async(c,s)=>{let{force:p}=c.query??{};(!r||p)&&(r=await ai()),s.header("x-total-count",`${r.length}`),s.json({data:r})});let n=null;e.get("/api/available-packages",async(c,s)=>{n||(n=await ci()),s.header("x-total-count",`${n.length}`),s.json({data:n})});let o=new Map;e.get("/api/packages/:packageName/latest",async(c,s)=>{let{packageName:p}=c.params??{};if(!p){s.status(400).json({error:"Package name is required"});return}if(!o.has(p)){let d=await ui(p);o.set(p,d)}return s.json({data:o.get(p)})}),e.post("/api/packages/install",async(c,s)=>{let{packages:p}=c.body??{};if((p==null?void 0:p.length)===0){s.status(400).json({error:"Package name is required"});return}await pi(p)?(r=null,n=null,s.status(200).json({success:!0})):s.status(400).json({success:!1,error:"Failed to update package"})});let i=null;e.get("/api/feed",async(c,s)=>{i||(i=await Go()),s.header("x-total-count",`${i.length}`),s.json({data:i})}),e.get("/api/project-id/status",async(c,s)=>{let p=await pr();if(p){s.status(200).json({projectId:p});return}if(p===!1){s.status(404).json({projectId:null});return}s.status(500).json({projectId:null})}),e.post("/api/project-id/update",async(c,s)=>{let{projectId:p}=c.body??{};if(!p){s.status(400).json({error:"Project ID is required"});return}if(await Pi(p)){s.status(200).json({success:!0});return}s.status(500).json({success:!1,error:"Failed to update project ID"})})},mr=a("fs-extra"),xi=a("@ory/client"),sr=a("http-proxy-middleware"),ur=y(a("path")),Ee=null,bi=async(e,t,r)=>{Ee||(Ee=await pr()),Ee&&(e.headers["x-project-id"]=Ee),r()},Ei=(e,t)=>{if(t.body){let r=JSON.stringify(t.body);e.setHeader("Content-Type","application/json"),e.setHeader("Content-Length",Buffer.byteLength(r)),e.write(r)}},Ri=async e=>{try{let t=`${Je}/.auth`,r=new xi.FrontendApi({isJsonMime:()=>!0,basePath:t,baseOptions:{withCredentials:!0}}),{data:n}=await r.toSession({xSessionToken:e,tokenizeAs:"jwt_template_1"});return n==null?void 0:n.tokenized}catch{}},Ci=async(e,t)=>{try{(0,mr.writeJSON)(ur.default.join(__dirname,"..",".persist.json"),{token:e,jwt:t})}catch{}},Ti=async()=>{try{return await(0,mr.readJSON)(ur.default.join(__dirname,"..",".persist.json"))}catch{}return{token:void 0,jwt:void 0}},Ai=e=>(t,r)=>{if(r.url.includes("self-service/logout/api")){let n=JSON.stringify({session_token:e});t.setHeader("Content-Length",Buffer.byteLength(n)),t.write(n)}},ki=e=>(t,r,n)=>{let o="";t.on("data",i=>{o+=i}),t.on("end",()=>{var i;let c;try{c=JSON.parse(o).session_token}catch{}if(!c){if((i=o==null?void 0:o.includes)!=null&&i.call(o,"an+account+with+the+same+identifier")){n.redirect("/after-login?error=An+account+with+the+same+identifier+exists+already");return}n.redirect("/after-login?error=Invalid-session-token");return}Ri(c).then(s=>{e(c,s??""),n.redirect("/after-login")})})},Oi=async e=>{let{token:t,jwt:r}=await Ti(),n=(0,sr.createProxyMiddleware)({target:Je,changeOrigin:!0,pathRewrite:{"^/api/.auth":"/.auth"},cookieDomainRewrite:{"refine.dev":""},logLevel:"silent",headers:{"auth-base-url-rewrite":"http://localhost:5001/api/.auth"},selfHandleResponse:!0,onProxyReq:(i,c,...s)=>{t&&(i.setHeader("X-Session-Token",t??""),Ai(t)(i,c,...s))},onProxyRes:(i,c,s)=>{if(c.url.includes("self-service/methods/oidc/callback"))return ki((p,d)=>{t=p,r=d,Ci(t,r)})(i,c,s);s.writeHead(i.statusCode||500,i.headers),i.pipe(s,{end:!0})}});e.use("/api/.auth",n);let o=(0,sr.createProxyMiddleware)({target:Je,secure:!1,changeOrigin:!0,logLevel:"silent",pathRewrite:{"^/api/.refine":"/.refine"},onProxyReq:(i,...c)=>{r&&(i.setHeader("Authorization",`Bearer ${r}`),i.removeHeader("cookie")),Ei(i,...c)}});e.use("/api/.refine",bi,o)},Si=y(a("path")),Ni=(e,t)=>{e.get("/open-in-editor/*",(r,n)=>{let{line:o,column:i}=r.query,c=r.path.replace("/open-in-editor",""),s=`vscode://file/${Si.default.join(t,c)}?${o?`line=${o}`:""}${i?`&column=${i}`:""}`;n.redirect(s)})},_i=async({projectPath:e=process.cwd()}={})=>{let t=(0,No.default)(),r=Lo(),n=Mo();r.on("connection",o=>{(0,P.receive)(o,P.DevtoolsEvent.DEVTOOLS_INIT,i=>{n.connectedApp?(0,P.send)(o,P.DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED,{url:n.connectedApp}):(n.connectedApp=i.url,n.clientWs=o,r.clients.forEach(c=>{(0,P.send)(c,P.DevtoolsEvent.DEVTOOLS_CONNECTED_APP,{url:n.connectedApp})}))}),(0,P.receive)(o,P.DevtoolsEvent.ACTIVITY,i=>{let c=n.activities.findIndex(p=>p.identifier===i.identifier),s={...i,createdAt:Date.now(),updatedAt:Date.now()};c>-1?(s.createdAt=n.activities[c].createdAt,n.activities[c]=s):n.activities.push(s),r.clients.forEach(p=>{(0,P.send)(p,P.DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE,{updatedActivities:[s]})})}),(0,P.receive)(o,P.DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR,({name:i})=>{r.clients.forEach(c=>{(0,P.send)(c,P.DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION,{name:i})})}),(0,P.receive)(o,P.DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS,()=>{r.clients.forEach(i=>{(0,P.send)(i,P.DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN,{})})}),o.on("close",(i,c)=>{n.clientWs&&(r.clients.has(n.clientWs)||(n.clientWs=null,n.connectedApp=null,n.activities=[],r.clients.forEach(s=>{(0,P.send)(s,P.DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP,{url:n.connectedApp})})))})}),Uo(r),Do(t),Fo(t),Ii(t,n),Oi(t),Ni(t,e)}});var Nn=a("commander"),_n=l(a("figlet"));var Tt=l(a("cli-table3")),V=l(a("chalk")),he=l(a("center-align"));var ft=l(a("ora")),Bn=async(e,t)=>{let r=(0,ft.default)({color:"cyan",text:t}).start(),n=await e();return r.stop(),n},U=Bn;var me=l(a("execa")),D=a("fs-extra"),gt=l(a("globby")),qe=l(a("path")),ht=l(a("preferred-pm"));var q=()=>{if(!(0,D.existsSync)("package.json"))throw new Error("./package.json not found");return JSON.parse((0,D.readFileSync)("package.json","utf8"))},F=()=>{let e=q();return Object.keys(e.dependencies||{})};var vt=()=>{let e=q();return Object.keys(e.devDependencies||{})},Wn=()=>[...F(),...F()],ue=()=>q().scripts,Y=async()=>{var e;try{let t=await(0,me.default)("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},n=Object.keys(r).filter(i=>i.startsWith("@refinedev")||i.startsWith("@pankod/refine-")),o=[];for(let i of n){let c=r[i].version;o.push({name:i,version:c})}return o}catch{return Promise.resolve(null)}},oe=async()=>{let e=["ably","airtable","antd","appwrite","chakra-ui","codemod","core","devtools","devtools-internal","devtools-server","devtools-shared","devtools-ui","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjs-query","nestjsx-crud","nextjs-router","react-hook-form","react-router-v6","react-table","remix","shared","simple-rest","strapi","strapi-v4","supabase"];try{let t=await(0,gt.default)("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(o=>{try{let i=a.resolve(qe.default.join("@refinedev",o,"package.json"));return[qe.default.dirname(i)]}catch{return[]}}),n=[];return await Promise.all([...r,...t].map(async o=>{if(await(0,D.pathExists)(`${o}/package.json`)){let c=await(0,D.readJSON)(`${o}/package.json`);n.push({name:c.name,version:c.version,path:o})}})),n}catch{return[]}},yt=async e=>await(0,D.pathExists)(`${e}/refine.config.js`),M={npm:{install:["install","--save"],installDev:["install","--save-dev"],outdatedJson:["outdated","--json"]},yarn:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--json"]},pnpm:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--format","json"]},bun:{install:["add"],installDev:["add","--dev"],outdatedJson:["outdated","--format","json"]}},A=async()=>{let e=await U(()=>(0,ht.default)(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},fe=async e=>{let t=await A();try{let r=M[t.name].install,n=(0,me.default)(t.name,[...r,...e],{stdio:"inherit"});n.on("message",o=>{console.log(o)}),n.on("error",o=>{console.log(o)}),n.on("exit",o=>{if(o===0){console.log("All `refine` packages updated  \u{1F389}");return}console.log(`Application exited with code ${o}`)})}catch(r){throw new Error(r)}},Me=async e=>{let t=await A();try{let r=M[t.name].install,n=me.default.sync(t.name,[...r,...e],{stdio:"inherit"});if(n.failed||n.exitCode!==0)throw new Error(n.stderr);return n}catch(r){throw new Error(r)}},wt=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}},Pt=()=>{var t;let e=q();return(t=e==null?void 0:e.refine)==null?void 0:t.projectId},ge=async()=>(await oe()).some(t=>t.name==="@refinedev/devtools"),zn=e=>{let t=F();return e.filter(r=>!t.includes(r))},It=async e=>{console.log("\u{1F331} Checking dependencies...");let t=zn(e);t.length>0?(console.log(`\u{1F331} Installing ${t.join(", ")}`),await Me(t),console.log("\u{1F389} Installation complete...")):console.log("\u{1F389} All required packages are already installed")},xt=e=>{let t=Wn(),r=e.filter(n=>t.includes(n));return r.length>0?(console.log(`\u{1F6A8} This feature doesn't support ${r.join(", ")} package.`),!0):!1};var bt=e=>e.charAt(0).toUpperCase()+e.slice(1),Et=e=>e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");var ie={name:"name",current:"current",wanted:"wanted",latest:"latest",changelog:"changelog"},Rt=[ie.name,ie.current,ie.wanted,ie.latest,ie.changelog],ve=async e=>{var c;let t=e==null?void 0:e.data,r=Object.keys((t==null?void 0:t[0])||{});if(!t||!r.length)return;let n=new Tt.default({head:Rt,style:{head:["blue"]}});t.forEach(s=>{n.push(Rt.map(p=>{let d=s[p];if(!d)return d;if(p==="latest"||p==="wanted"){let u=Ct(s.current),v=Ct(d),b=Hn(u,v),g=V.default[b.major](v.major),m=V.default[b.minor](v.minor),f=V.default[b.patch](v.patch);return`${g}.${m}.${f}`}return p==="changelog"?V.default.blueBright.underline(d):d}))});let o=n.toString(),i=Et(((c=o.split(`
`))==null?void 0:c[0])||"").length;console.log(),console.log((0,he.default)("Update Available",i)),console.log(o),console.log((0,he.default)(`To update ${V.default.bold("`refine`")} packages with wanted version`,i)),console.log((0,he.default)(` Run the following command: ${V.default.yellowBright(await Jn())}`,i)),console.log()},Ct=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},Hn=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"},Jn=async()=>{let e="npx @refinedev/cli update",t=F(),r=Object.keys(ue()),n=t.includes("@refinedev/cli"),o=r.includes("refine");if(!n&&!o)return e;let i=await A();return o?`${i.name} run refine update`:n?"npx refine update":e};var At=l(a("execa"));var kt=l(a("semver-diff")),Yn=e=>e.command("check-updates").description("Check all installed `refine` packages are up to date").action(Xn),Xn=async()=>{let e=await U(ae,"Checking for updates...");if(!e.length){console.log("All `refine` packages are up to date \u{1F389}\n");return}await ve({data:e})},ae=async()=>await Gn(),Gn=async()=>{let e=await Kn();if(!e)return[];let t=[],r;return Object.keys(e).forEach(o=>{let i=e[o];o.includes("@refinedev")&&(r=o.replace(/@refinedev\//,"https://c.refine.dev/"),t.push({name:o,current:i.current,wanted:i.wanted,latest:i.latest,changelog:r}))}),t.filter(o=>!!(0,kt.default)(o.current,o.latest))},Kn=async()=>{let e="npm",{stdout:t,timedOut:r}=await(0,At.default)(e,M[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},Ot=Yn;var x=(s=>(s.REACT_SCRIPT="react-scripts",s.REMIX="remix",s.NEXTJS="nextjs",s.VITE="vite",s.CRACO="craco",s.PARCEL="parcel",s.UNKNOWN="unknown",s))(x||{});var Ve=(o=>(o.ANTD="antd",o.MUI="mui",o.MANTINE="mantine",o.CHAKRA="chakra-ui",o))(Ve||{});var St=(n=>(n.NPM="npm",n.YARN="yarn",n.PNPM="pnpm",n))(St||{});var w=e=>{if(e)return e;let t=F(),r=vt();return t.includes("@craco/craco")||r.includes("@craco/craco")?"craco":t.includes("react-scripts")||r.includes("react-scripts")?"react-scripts":t.includes("next")||r.includes("next")?"nextjs":t.includes("@remix-run/react")||r.includes("@remix-run/react")?"remix":t.includes("vite")||r.includes("vite")?"vite":t.includes("parcel")||r.includes("parcel")?"parcel":"unknown"},Nt=()=>{let e=F();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"};var se=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},_t=e=>{switch(e){case"nextjs":return{path:"src/providers",alias:"../src/providers"};case"remix":return{path:"app/providers",alias:"~/providers"}}return{path:"src/providers",alias:"providers"}},Dt=e=>{switch(e){case"remix":return"./app";default:return"./src"}};var B=l(a("handlebars")),_=a("fs-extra"),Qn=(e,t)=>{let r=(0,_.readFileSync)(e);return B.default.registerHelper("ifIn",(o,i,c)=>o.includes(i)?c.fn(B.default):c.inverse(B.default)),B.default.registerHelper("formatInferencerComponent",o=>{if(o)switch(o){case"chakra-ui":return"ChakraUI";default:return o.charAt(0).toUpperCase()+o.slice(1)}}),B.default.registerHelper("capitalize",o=>{if(o)return o.charAt(0).toUpperCase()+o.slice(1)}),B.default.compile(r.toString())(t)},jt=(e,t)=>{(0,_.readdirSync)(e).forEach(n=>{let o=`${e}/${n}`,i=`${e}/${n.replace(".hbs","")}`;(0,_.createFileSync)(i),(0,_.writeFileSync)(i,Qn(o,t)),(0,_.unlinkSync)(o)})};var $t=l(a("execa")),k=a("fs-extra"),Lt=l(a("inquirer")),Be=a("path"),Ut=a("pluralize"),we=l(a("temp"));var ye=["list","create","edit","show"],X=async(e,t)=>{var o;let r=(e==null?void 0:e.path)||se(w()).path,n=e.actions||ye.join(",");if(!t.length){let{name:i,selectedActions:c}=await Lt.default.prompt([{type:"input",name:"name",message:"Resource Name (users, products, orders etc.)",validate:s=>s?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:ye,default:(o=e==null?void 0:e.actions)==null?void 0:o.split(",")}]);t=[i],n=c.join(",")}t.forEach(i=>{let c=n?n.split(","):void 0,s=(0,Ut.plural)(i).toLowerCase(),p=(0,Be.join)(process.cwd(),r,s);if((0,k.pathExistsSync)(p)){console.error(`\u274C Resource (${(0,Be.join)(r,s)}) already exist!`);return}let d=bt(i),u=Nt(),v=`${__dirname}/../templates/resource`,b=Zn();(0,k.copySync)(v,b);let g={resourceName:i,resource:d,actions:c||ye,uiFramework:u};jt(b,g),c&&ye.forEach(R=>{c.includes(R)||(0,k.unlinkSync)(`${b}/${R}.tsx`)}),(0,k.mkdirSync)(r,{recursive:!0});let m=`${r}/${s}`,f={};(0,k.pathExistsSync)(m)&&(f={overwrite:!0}),(0,k.moveSync)(b,m,f),we.default.cleanupSync();let h=a.resolve(".bin/jscodeshift"),{stderr:S}=$t.default.sync(h,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/resource.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist",`--__actions=${g.actions}`,`--__pathAlias=${se(w()).alias}`,`--__resourceFolderName=${s}`,`--__resource=${d}`,`--__resourceName=${i}`]);S&&console.log(S),console.log(`\u{1F389} Resource (${m}) generated successfully!`)})},Zn=()=>(we.default.track(),we.default.mkdirSync("resource"));var eo=e=>{let t=w(),{path:r}=se(t);return e.command("create-resource").allowExcessArguments(!0).description('Create a new resource files (deprecated, please use "add resource" command)').option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(to)},to=async(e,t)=>{X(e,t.args)},Ft=eo;var qt=l(a("dotenv"));qt.config();var ro={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},no=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,n]of Object.entries(ro))if(n.test(e)){t=r;break}return t},O={NODE_ENV:no(),REFINE_NO_TELEMETRY:process.env.REFINE_NO_TELEMETRY||"false",UPDATE_NOTIFIER_IS_DISABLED:process.env.UPDATE_NOTIFIER_IS_DISABLED||"false",UPDATE_NOTIFIER_CACHE_TTL:process.env.UPDATE_NOTIFIER_CACHE_TTL||1e3*60*60*24,REFINE_PROXY_DOMAIN:process.env.REFINE_PROXY_DOMAIN||"https://refine.dev",REFINE_PROXY_TARGET:process.env.REFINE_PROXY_TARGET||"http://localhost:3000",REFINE_PROXY_PORT:process.env.REFINE_PROXY_PORT||"7313",REFINE_PROXY_REWRITE_URL:process.env.REFINE_REWRITE_URL||"http://localhost:7313"};var Mt=l(a("express")),Pe=a("http-proxy-middleware"),oo=e=>e.command("proxy").description("Manage proxy settings").action(io).option("-p, --port [port]","Port to serve the proxy server. You can also set this with the `REFINE_PROXY_PORT` environment variable.",O.REFINE_PROXY_PORT).option("-t, --target [target]","Target to proxy. You can also set this with the `REFINE_PROXY_TARGET` environment variable.",O.REFINE_PROXY_TARGET).option("-d, --domain [domain]","Domain to proxy. You can also set this with the `REFINE_PROXY_DOMAIN` environment variable.",O.REFINE_PROXY_DOMAIN).option("-r, --rewrite-url [rewrite URL]","Rewrite URL for redirects. You can also set this with the `REFINE_PROXY_REWRITE_URL` environment variable.",O.REFINE_PROXY_REWRITE_URL),io=async({port:e,target:t,domain:r,rewriteUrl:n})=>{let o=(0,Mt.default)(),c=new URL(t).protocol==="http:"?s=>{var p;s.headers["set-cookie"]&&((p=s.headers["set-cookie"])==null||p.forEach((d,u)=>{var v;(v=s==null?void 0:s.headers)!=null&&v["set-cookie"]&&(s.headers["set-cookie"][u]=d.replace("Secure;",""))}))}:void 0;o.use("/.refine",(0,Pe.createProxyMiddleware)({target:`${r}/.refine`,changeOrigin:!0,pathRewrite:{"^/.refine":""},logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy rewrite rule created")||(`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.refine to ${r}/.refine`):s&&console.log(s))},warn:console.warn,debug:console.debug,error:console.error})})),o.use("/.auth",(0,Pe.createProxyMiddleware)({target:`${r}/.auth`,changeOrigin:!0,cookieDomainRewrite:{"refine.dev":""},headers:{"auth-base-url-rewrite":`${n}/.auth`},pathRewrite:{"^/.auth":""},logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy rewrite rule created")||(`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.auth to ${r}/.auth`):s&&console.log(s))},warn:console.warn,debug:console.debug,error:console.error}),onProxyRes:c})),o.use("*",(0,Pe.createProxyMiddleware)({target:`${t}`,changeOrigin:!0,ws:!0,logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e} to ${t}`):s&&console.log(s)},warn:console.warn,debug:console.debug,error:console.error})})),o.listen(Number(e))},Vt=oo;var Xt=a("commander");var zt=l(a("conf")),Ht=l(a("chalk"));var Bt=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var ao="refine-update-notifier",j=new zt.default({projectName:ao,defaults:{key:"",lastUpdated:0,packages:[]}}),G=async()=>{if(mo())return;let e=await co();if(e!==null){if(e){Wt();return}so(),Wt()}},so=async()=>{let e=j.get("packages");e!=null&&e.length&&(await ve({data:e}),console.log(`
`))},co=async()=>{let e=await po(),t=lo();return e===null?null:!!(t||!e)},Wt=async()=>{try{let e=await ae();return j.set("packages",e),j.set("lastUpdated",Date.now()),j.set("key",await Jt()),e}catch{return j.set("packages",[]),j.set("lastUpdated",Date.now()),j.set("key",""),null}},lo=()=>{let e=j.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,n=Number(O.UPDATE_NOTIFIER_CACHE_TTL);return r>=n},po=async()=>{let e=j.get("key"),t=await Jt();return t===null?null:e===t},Jt=async()=>{let e=await Y();if(!e)return console.error(Ht.default.red("Something went wrong when trying to get installed `refine` packages.")),null;let t=e.map(n=>`${n.name}@${n.version}`);return Bt(t.toString())},mo=()=>O.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var C={["react-scripts"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>a.resolve(".bin/react-scripts")},["vite"]:{getDev:e=>["dev",...e],getStart:e=>["preview",...e],getBuild:e=>["build",...e],getBin:()=>a.resolve(".bin/vite")},["nextjs"]:{getDev:e=>["dev",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>a.resolve(".bin/next")},["remix"]:{getDev:e=>["dev",...e],getStart:e=>(e==null?void 0:e.length)?e:(console.log(),console.warn("\u{1F6A8} Remix requires a path to the entry file. Please provide it as an argument to `refine start` command in package.json scripts"),console.warn("Refine will use `./build/index.js` as default"),console.warn("Example: `refine start ./build/index.js`"),console.log(),["./build/index.js"]),getBuild:e=>["build",...e],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return a.resolve(`${process.cwd()}/node_modules/.bin/${t}`)}},["craco"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>a.resolve(".bin/craco")},["parcel"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>a.resolve(".bin/parcel")},["unknown"]:{getDev:e=>[...e],getStart:e=>[...e],getBuild:e=>[...e],getBin:()=>"unknown"}};var Yt=l(a("execa")),$=async(e,t)=>{var n,o;if(e==="unknown"){let i=Object.values(x).filter(c=>c!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${i}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let r=(0,Yt.default)(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",...process.env}});return(n=r.stdout)==null||n.pipe(process.stdout),(o=r.stderr)==null||o.pipe(process.stderr),await r};var K=e=>{let t=w(),r=[];switch(e){case"dev":r=C[t].getDev([""]);break;case"start":r=C[t].getStart([""]);break;case"build":r=C[t].getBuild([""]);break}return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`},Q=()=>`Platform to run command on. 
ex: ${Object.values(x).join(", ")}`;var uo=e=>e.command("start").description(K("start")).allowUnknownOption(!0).addOption(new Xt.Option("-p, --platform <platform>",Q()).choices(Object.values(x).filter(t=>t!=="unknown"))).argument("[args...]").action(fo),fo=async(e,{platform:t})=>{let r=w(t),n=C[r].getBin("start"),o=C[r].getStart(e);await G(),$(n,o)},We=uo;var Qe=a("commander");var wr=l(gr());var hr=l(a("execa"));var Ce=a("prettier"),Ye=async e=>{try{let t=await(0,Ce.resolveConfig)(process.cwd());return(0,Ce.format)(e,{...t??{},parser:"typescript"})}catch{return e}};var vr=async()=>{let e=a.resolve(".bin/jscodeshift"),{stderr:t}=hr.default.sync(e,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);t&&console.log(t)};var yr=()=>{let t=q().scripts||{};return{dev:((t==null?void 0:t.dev)||"").match(/refine dev(\s|$|;){1}/)!==null}};var Pr=l(a("boxen")),Ir=l(a("cardinal")),Ge=l(a("chalk")),xr=a("commander"),br=l(a("dedent")),Te=l(a("semver")),Di=["start","init"],ji="start",Er="4.42.0",$i=e=>e.command("devtools").description("Start or install refine's devtools server; it starts on port 5001.").addArgument(new xr.Argument("[command]","devtools related commands").choices(Di).default(ji)).addHelpText("after",`
Commands:
    start     Start refine's devtools server
    init      Install refine's devtools client and adds it to your project
`).action(Li),Li=async e=>{switch(e){case"start":Ke();return;case"init":Ui();return}},Ui=async()=>{var o;let e=await Xe();if(await U(ge,"Checking if devtools is installed...")){console.log("\u{1F389} refine devtools is already installed");return}if(e&&await Rr({pkg:e}))return;console.log("\u{1F331} Installing refine devtools...");let r=["@refinedev/devtools@latest"];if((!e||Te.default.lt(e.version,Er))&&(r.push("@refinedev/core@latest"),console.log("\u{1F331} refine core package is being updated for devtools...")),await Me(r),console.log(""),console.log(""),console.log("\u{1F331} Adding devtools component to your project...."),await vr(),console.log("\u2705 refine devtools package and components added to your project"),r.includes("@refinedev/core@latest")){let i=await Xe();console.log(`\u2705 refine core package updated from ${(e==null?void 0:e.version)??"unknown"} to ${(i==null?void 0:i.version)??"unknown"}`),console.log(`   Changelog: ${Ge.default.underline.blueBright(`https://c.refine.dev/core#${(e==null?void 0:e.version.replaceAll(".",""))??""}`)}`)}console.log("");let{dev:n}=yr();if(n){console.log(`\u{1F64C} You're good to go. "npm run dev" will automatically starts the devtools server.`),console.log('\u{1F449} You can also start the devtools server manually by running "refine devtools start"');return}if(!n){let i=(o=q().scripts)==null?void 0:o.dev;console.log('\u{1F6A8} Your have modified the "dev" script in your package.json. Because of that, "npm run dev" will not start the devtools server automatically.'),console.log('\u{1F449} You can append "refine devtools" to "dev" script'),console.log('\u{1F449} You can start the devtools server manually by running "refine devtools"'),console.log(""),console.log((0,Pr.default)(Ir.default.highlight((0,br.default)(`
                {
                    "scripts": {
                        "dev": "${i} & refine devtools",
                        "refine": "refine"
                    }
                }  
        `)),{padding:1,title:"package.json",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"}))}},Ke=async()=>{let e=await Xe();if(e){if(await Rr({pkg:e}))return;if(Te.default.lt(e.version,Er)){console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`);let t=await A();console.log(`\u{1F449} You can update @refinedev/core package by running "${t.name} run refine update"`);return}}(0,wr.server)()},Xe=async()=>{let e=await oe(),t=e==null?void 0:e.find(r=>r.name==="@refinedev/core"||r.name==="@pankod/refine-core");if(t)return t},Rr=async({pkg:e})=>e.name==="@pankod/refine-core"||Te.default.lt(e.version,"4.0.0")?(console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`),console.log("You can follow migration guide to update refine."),console.log(Ge.default.blue("https://refine.dev/docs/migration-guide/3x-to-4x/")),!0):!1,Cr=$i;var Fi=e=>e.command("dev").description(K("dev")).allowUnknownOption(!0).addOption(new Qe.Option("-p, --platform <platform>",Q()).choices(Object.values(x).filter(t=>t!=="unknown"))).addOption(new Qe.Option("-d, --devtools <devtools>","Start refine's devtools server").default("true","true if devtools is installed")).argument("[args...]").action(qi),qi=async(e,{platform:t,...r})=>{let n=w(t),o=C[n].getBin("dev"),i=C[n].getDev(e);await G();let c=await ge();(r.devtools==="false"?!1:c)&&Ke(),$(o,i)},Ze=Fi;var Tr=a("commander");var Mi=e=>e.command("build").description(K("build")).allowUnknownOption(!0).addOption(new Tr.Option("-p, --platform <platform>",Q()).choices(Object.values(x).filter(t=>t!=="unknown"))).argument("[args...]").action(Vi),Vi=async(e,{platform:t})=>{let r=w(t),n=C[r].getBin("build"),o=C[r].getBuild(e);await G();try{await $(n,o)}catch{process.exit(1)}},et=Mi;var tt=l(a("chalk"));var Bi=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(Wi),Wi=async e=>{let[t,...r]=e,n=ue();if(!t){console.log(`Available via ${tt.default.blue("`refine run`")}:
`);for(let[c,s]of Object.entries(n))console.log(`  ${c}`),console.log(`    ${tt.default.dim(s)}`),console.log();return}if(!Object.keys(n).includes(t)){let c=`${process.cwd()}/node_modules/.bin/${t}`;$(c,r);return}let i=await A();$(i.name,["run",t,...r])},rt=Bi;var at=l(a("path")),z=l(a("chalk")),ce=l(a("inquirer")),Kr=l(a("inquirer-autocomplete-prompt")),L=a("fs-extra");var ot=l(a("path"));var Dr=l(a("path"));var nt={};Mn(nt,{PackageManagerTypes:()=>St,ProjectTypes:()=>x,UIFrameworks:()=>Ve,appendAfterImports:()=>Sr,getFileContent:()=>Ae,getImports:()=>ee,getNameChangeInImport:()=>kr});var zi=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Hi=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,ee=e=>{let t=e.matchAll(zi),r=[];for(let n of t){let[o,i,c,s,p]=n;r.push({statement:o,importPath:p,...i&&{defaultImport:i},...c&&{namedImports:c},...s&&{namespaceImport:s}})}return r==null?void 0:r.filter(Boolean)},kr=e=>{let t=e.matchAll(Hi),r=[];for(let n of t){let[o,i,c,s,p]=n;r.push({statement:o,fromName:i.trim(),toName:s.trim(),afterCharacter:p})}return r},Ji=(e,t)=>{var i;let r=e.substring(0,e.indexOf(t.statement)),n=ee(r).pop();return n?r.substring(r.indexOf(n==null?void 0:n.statement)+((i=n==null?void 0:n.statement)==null?void 0:i.length)):r},Yi=(e,t)=>!!(t?Ji(e,t):"").trim(),Ar=["react","@refinedev/core","@refinedev/"],Or=e=>{var g;let t=e,r=ee(e),n=r.filter(m=>!m.statement.includes("import type ")),o=r.filter(m=>m.statement.includes("import type")),i=[],c=[];n.forEach(m=>{Yi(e,m)?i.push(m):c.push(m)});let s=t.indexOf((g=c==null?void 0:c[0])==null?void 0:g.statement);c.forEach(m=>{t=t.replace(m.statement,"")}),o.forEach(m=>{t=t.replace(m.statement,"")});let p=c.reduce((m,f)=>{let{importPath:h}=f;return m[h]?m[h].push(f):m[h]=[f],m},{}),v=[...Object.entries(p).map(([m,f])=>{let h=f.find(N=>N.defaultImport),S=f.find(N=>N.namespaceImport),R=f.filter(N=>N.namedImports).map(N=>(N.namedImports??"").replace(/{|}/g,"").trim().split(",").map(Ue=>Ue.trim()).filter(Boolean).join(", ")).join(", "),J="";return S&&(J+=`${S.statement}
`),(h||R)&&(h&&R?J+=`import ${h.defaultImport}, { ${R} } from "${f[0].importPath}";
`:h?J+=`import ${h.defaultImport} from "${f[0].importPath}";
`:J+=`import { ${R} } from "${f[0].importPath}";
`),[m,J]})].sort(([m],[f])=>{let h=Ar.findIndex(R=>m.includes(R)),S=Ar.findIndex(R=>f.includes(R));return h===S?m.localeCompare(f):h===-1?1:S===-1?-1:h-S}).map(([,m])=>m).join(""),b=o.map(m=>m.statement).join(`
`);return t=t.substring(0,s)+v+b+t.substring(s),t};var Sr=(e,t)=>{let r=ee(e),n=r[r.length-1],o=n?e.indexOf(n.statement):e.length-1;return`${e.slice(0,o+(n==null?void 0:n.statement.length))}
${t}
${e.slice(o+(n==null?void 0:n.statement.length))}`};var Nr=a("fs-extra"),_r=a("path");function Ae(e){if(this!=null&&this.absolutePackageDir)try{return(0,Nr.readFileSync)((0,_r.join)(this.absolutePackageDir,e)).toString()}catch{return}}var jr=a("module"),Xi=jr.prototype.require,$r=(e,t)=>{jr.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...nt,getFileContent:n=>Ae.call({absolutePackageDir:t?e:Dr.default.join(process.cwd(),e)},n)}:Xi.apply(this,r)}};var it=async(e,t)=>{try{return $r(e,t),a(ot.default.join(t?e:ot.default.join(process.cwd(),e),"refine.config.js"))}catch{return}};var Br=l(a("dedent"));var T={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};var E=l(a("chalk"));var Lr=l(a("chalk")),Ur=l(a("cardinal")),Fr=l(a("boxen")),Gi=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,n]=t.exec(e)??[];if(n){let o=n.trim(),i=e.replace(r||"","");return{title:o,code:i}}return{code:e}},qr=e=>{let{title:t,code:r}=Gi(e),n="";try{n=Ur.default.highlight(r,{jsx:!0})}catch{n=r}return(0,Fr.default)(n,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?Lr.default.bold(t):void 0})};var Mr=a("marked"),Vr=l(a("marked-terminal")),ke=e=>(0,Mr.marked)(e,{renderer:new Vr.default({code:qr})});var Wr=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let n=t.filter(([,d])=>Object.values(T).filter(u=>u!==T.SUCCESS).includes(d)),o="success";switch(n.length){case 0:o="success";break;case t.length:o="error";break;default:o="warning";break}let i=d=>{let u=d==null?void 0:d.replace(process.cwd(),"");return u!=null&&u.startsWith("/")?u.slice(1):u!=null&&u.startsWith("./")?u.slice(2):u},c=()=>{switch(o){case"success":console.log(E.default.blueBright(`Successfully swizzled ${E.default.bold(e)}`));return;case"warning":console.log(E.default.yellowBright(`Swizzle completed with errors for ${E.default.bold(e)}`));return;case"error":console.log(E.default.redBright(`Swizzle failed for ${E.default.bold(e)}`));return;default:return}},s=()=>{let d=[];d.push(E.default.dim(`File${t.length>1?"s":""} created:`)),d.push(t.map(([u,v])=>v===T.SUCCESS?E.default.cyanBright.dim(` - ${i(u)}`):v===T.TARGET_ALREADY_EXISTS?E.default.cyanBright.dim(` - ${E.default.yellowBright.bold("[FILE_ALREADY_EXISTS] ")}${i(u)}`):v===T.SOURCE_PATH_NOT_A_FILE?E.default.cyanBright.dim(` - ${E.default.yellowBright.bold("[SOURCE NOT FOUND] ")}${i(u)}`):E.default.cyanBright.dim(` - ${E.default.yellowBright.bold(`[${v}]`)}${i(u)}`)).join(`
`)),console.log(d.join(`
`))},p=()=>{r&&o!=="error"&&console.log(ke((0,Br.default)(`
${r}`)))};console.log(""),c(),s(),console.log(""),p()};var zr=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};var Qr=l(a("boxen"));var Hr=()=>{let e;try{e=w()}catch{e=void 0}return Dt(e)};var Jr=l(a("inquirer")),Yr=l(a("chalk"));var Xr=async e=>{await Ki(e)?await fe(e):await Qi(e)},Ki=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(n=>` - ${n}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await Jr.default.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},Qi=async e=>{let t=await A(),r=M[t.name].install.join(" "),n=e.join(" "),o=`${t.name} ${r} ${n}`;console.log(`
You can install them manually by running this command:`),console.log(Yr.default.bold.blueBright(o))};var Zi=e=>e.command("swizzle").description(`Export a component or a function from ${z.default.bold("refine")} packages to customize it in your project`).action(ea),Gr=e=>(t,r="")=>e.filter(o=>{var i;return o.label.toLowerCase().includes(r.toLowerCase())||((i=o.group)==null?void 0:i.toLowerCase().includes(r.toLowerCase()))}).flatMap((o,i,c)=>{var d;return[...(o==null?void 0:o.group)&&((d=c[i-1])==null?void 0:d.group)!==o.group&&o.group?[new ce.default.Separator(z.default.bold(o.group))]:[],{name:` ${o.label}`,value:o!=null&&o.value?o.value:o}]}),ea=async e=>{var u,v,b;ce.default.registerPrompt("autocomplete",Kr.default);let t=await oe(),r=[];if(await Promise.all(t.map(async g=>{let m=await yt(g.path),f=r.findIndex(h=>h.name===g.name)===-1;m&&f&&r.push(g)})),r.length===0){console.log("No refine packages found with swizzle configuration.");return}console.log(`${(0,Qr.default)(`Found ${z.default.blueBright(r.length)} installed ${z.default.blueBright.bold("refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let n=await Promise.all(r.map(async g=>{let m=await it(g.path,!0)??await it(g.path,!1)??{swizzle:{items:[]}};return{...g,config:m}})),{selectedPackage:o}=await ce.default.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:Gr(n.sort((g,m)=>{var f,h;return(((f=g.config)==null?void 0:f.group)??"").localeCompare(((h=m.config)==null?void 0:h.group)??"")}).map(g=>{var m,f;return{label:((m=g.config)==null?void 0:m.name)??g.name,value:g,group:(f=g.config)==null?void 0:f.group}}))}]),{swizzle:{items:i,transform:c}}=o.config,s;if(i.length===0){console.log(`No swizzle items found for ${z.default.bold(((u=o.config)==null?void 0:u.name)??o.name)}`);return}if(i.length===1?s=i[0]:i.length>1&&(s=(await ce.default.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:Gr(i.sort((m,f)=>m.group.localeCompare(f.group)))({},"")}])).selectedComponent),!s){console.log(`No swizzle items selected for ${z.default.bold(((v=o.config)==null?void 0:v.name)??o.name)}`);return}let p=Hr(),d=await Promise.all(s.files.map(async g=>{var m;try{let f=g.src?at.default.join(o.path,g.src):void 0,h=g.dest?at.default.join(process.cwd(),p,g.dest):void 0;if(!f)return console.log("No src path found for file",g),["",T.SOURCE_PATH_NOT_FOUND];if(!h)return console.log("No destination path found for file",g),["",T.TARGET_PATH_NOT_FOUND];if(!await(0,L.pathExists)(f))return[h,T.SOURCE_PATH_NOT_A_FILE];let R=await(0,L.readFile)(f,"utf-8");if(await(0,L.pathExists)(h))return[h,T.TARGET_ALREADY_EXISTS];await(0,L.ensureFile)(h);let N=zr(R),Le=((m=g.transform)==null?void 0:m.call(g,N))??N,Ue=(c==null?void 0:c(Le,f,h))??Le,Dn=Or(Ue),jn=await Ye(Dn);return await(0,L.writeFile)(h,jn),[h,T.SUCCESS]}catch{return["",T.UNKNOWN_ERROR]}}));d.length>0&&(Wr({files:d,label:s.label,message:s.message}),(b=s==null?void 0:s.requiredPackages)!=null&&b.length&&await Xr(s.requiredPackages))},Zr=Zi;var rn=a("commander");var te=l(a("inquirer")),st=l(a("semver-diff")),Oe=l(a("chalk"));var en=e=>{let t=e.filter((n,o)=>e.indexOf(n)!==o),r=new Set(t);return Array.from(r)};var tn=async e=>{let t=ra(e);if(!t){console.log("All `refine` packages are up to date. \u{1F389}");return}let r=na(t),n=await te.default.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:ta}]);return n.packages.length>0?n.packages:null},ta=e=>{let r=e.map(o=>wt(o)).map(o=>o.name),n=en(r);return n.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${n.join(", ")}`:!0},ra=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let n=r.current,o=(0,st.default)(n,r.wanted),i=(0,st.default)(n,r.latest);if(o===i&&i){t[i].push({name:r.name,from:n,to:r.latest});return}o&&t[o].push({name:r.name,from:n,to:r.wanted}),i&&t[i].push({name:r.name,from:n,to:r.latest})}),t},na=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(d=>{d.forEach(u=>{u.name.length>t&&(t=u.name.length),u.from.length>r&&(r=u.from.length)})}),t+=2;let n=[],o="Package".padEnd(t),i="From".padEnd(r),s=`
   ${o} ${i}${"To".padStart(r)}`;n.push(new te.default.Separator(s)),e.patch.length>0&&(n.push(new te.default.Separator(Oe.default.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(d=>{n.push({name:`${d.name.padEnd(t)} ${d.from.padStart(r)} -> ${d.to}`,value:`${d.name}@${d.to}`})})),e.minor.length>0&&(n.push(new te.default.Separator(Oe.default.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(d=>{n.push({name:`${d.name.padEnd(t)} ${d.from.padStart(r)} -> ${d.to}`,value:`${d.name}@${d.to}`})})),e.major.length>0&&(n.push(new te.default.Separator(Oe.default.reset.bold.blue(`
Major Updates`))),e.major.forEach(d=>{n.push({name:`${d.name.padEnd(t)} ${d.from.padStart(r)} -> ${d.to}`,value:`${d.name}@${d.to}`})}));let p=n.length+6;return{choices:n,pageSize:p}};var oa=e=>e.command("update").description("Interactively select and update all `refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new rn.Option("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(ia),ia=async e=>{let{tag:t,dryRun:r,all:n}=e,o=await U(ae,"Checking for updates...");if(!(o!=null&&o.length)){console.log("All `refine` packages are up to date \u{1F389}");return}let i=n?aa(t,o):await tn(o);if(i){if(r){sa(i);return}ca(i)}},aa=(e,t)=>e==="wanted"&&t.every(o=>o.current===o.wanted)?(console.log("All `refine` packages are up to date with the wanted version \u{1F389}"),null):t.map(n=>{let o=e==="wanted"?n.wanted:e;return`${n.name}@${o}`}),sa=async e=>{let t=await A(),r=M[t.name].install;console.log(`${t.name} ${r.join(" ")} ${e.join(" ")}`)},ca=e=>{console.log("Updating `refine` packages..."),console.log(e),fe(e)},nn=oa;var on=l(a("envinfo")),an=l(a("ora")),la=e=>e.command("whoami").description("View the details of the development environment").action(da),da=async()=>{let e=(0,an.default)("Loading environment details...").start(),t=await on.default.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),n=(await Y()||[]).map(o=>` - ${o.name}: ${o.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(n)},sn=la;var de=l(a("chalk")),pe=l(a("inquirer"));var un=l(a("inquirer"));var cn=l(a("execa"));var Se=async e=>{let{incompatiblePackages:t,integrationName:r,requiredPackages:n,transformerFileName:o}=e;if(xt(t))return;await It(n),console.log(`\u{1F680} Setting up ${r}...`);let i=a.resolve(".bin/jscodeshift"),{stderr:c}=cn.default.sync(i,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/integrations/${o}.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);c&&console.log(c),console.log(`\u{1F389} ${r} setup completed!`)};var Ne=l(a("chalk")),_e=e=>{let{id:t,title:r,description:n,disabled:o}=e;return o?{value:t,name:`${Ne.default.gray(r)}`,disabled:Ne.default.redBright(o)}:{value:t,name:`${Ne.default.blueBright(r)} - ${n}`}};var ln="ant-design",pa="Ant Design",ma=["@remix-run/react","next"],ua=["antd","@refinedev/antd"],fa="ant-design",dn={id:ln,getChoice:e=>{let t="Ant Design",r="Setup Ant Design with Refine",n;return["nextjs","remix"].includes(e)&&(n="Automatic setup only available Vite for now. See the documentation for manual installation: https://refine.dev/docs/ui-integrations/ant-design/introduction/#installation"),_e({id:ln,title:t,description:r,disabled:n})},runTransformer:async()=>await Se({incompatiblePackages:ma,integrationName:pa,requiredPackages:ua,transformerFileName:fa})};var pn="react-router",ga="React Router",ha=["@remix-run/react","next"],va=["react-router-dom","@refinedev/react-router-v6"],ya="react-router",mn={id:pn,getChoice:e=>{let t="React Router",r="Setup routing with React Router",n;return e==="nextjs"&&(n="Can't be used with Next.js. https://nextjs.org/docs/app/building-your-application/routing"),e==="remix"&&(n="Can't be used with Remix. https://remix.run/docs/en/main/discussion/routes"),_e({id:pn,title:t,description:r,disabled:n})},runTransformer:async()=>await Se({incompatiblePackages:ha,integrationName:ga,requiredPackages:va,transformerFileName:ya})};var H=[dn,mn];var ct=()=>{let e=w(),t=H.map(r=>r.getChoice(e));return t.every(r=>r.disabled)?[{value:"none",name:"No integration available for this project type."},...t]:t},fn=async()=>await un.default.prompt([{type:"list",name:"id",message:"Which integration do you want to add?",choices:ct(),default:"none"}]);var gn=l(a("chalk")),hn=l(a("inquirer"));var ne=a("fs-extra"),lt=a("path");var re=[{id:"auth",title:"Auth provider",description:"Manage user authentication and authorization",fileName:"auth-provider.tsx",templateFileName:"demo-auth-provider.tsx"},{id:"live",title:"Live provider",description:"Enable real-time updates and synchronization",fileName:"live-provider.tsx",templateFileName:"demo-live-provider.tsx"},{id:"data",title:"Data provider",description:"Communicate with your API",fileName:"data-provider.tsx",templateFileName:"demo-data-provider.tsx"},{id:"access-control",title:"Access Control",description:"Manage user permissions & roles",fileName:"access-control-provider.tsx",templateFileName:"demo-access-control-provider.tsx"},{id:"notification",title:"Notification provider",description:"Display in-app alerts and messages",fileName:"notification-provider.tsx",templateFileName:"demo-notification-provider.tsx"},{id:"i18n",title:"I18n provider",description:"Support multiple languages and locales",fileName:"i18n-provider.tsx",templateFileName:"demo-i18n-provider.tsx"},{id:"audit-log",title:"Audit Log provider",description:"Display audit logs for your resources",fileName:"audit-log-provider.tsx",templateFileName:"demo-audit-log-provider.tsx"}];var wa=`${__dirname}/../templates/provider`,le=(e,t)=>{e.forEach(r=>{let{fileName:n,templateFileName:o}=Pa(r),i=t??dt(),c=(0,lt.join)(i,n),s=(0,lt.join)(process.cwd(),i,n);if((0,ne.pathExistsSync)(s)){console.error(`\u274C Provider (${c}) already exist!`);return}(0,ne.mkdirSync)(i,{recursive:!0}),(0,ne.copySync)(`${wa}/${o}`,s),console.log(`\u{1F389} Provider (${c}) created successfully!`)})},Pa=e=>{let t=re.find(r=>r.id===e);if(!t)throw new Error(`Invalid provider: ${e}`);return t},dt=()=>{let e=w(),{path:t}=_t(e);return t};var pt=()=>re.map(e=>{let{id:t,title:r,description:n}=e;return{value:t,name:`${gn.default.blueBright(r)} - ${n}`}}),vn=async()=>await hn.default.prompt([{type:"checkbox",name:"providers",message:"Which providers do you want to add?",choices:pt()},{type:"input",name:"providersPath",message:"Where do you want to generate the providers?",default:dt()}]);var yn=(e,t)=>t.map(r=>({...r,name:` . ${r.name}`,value:{group:e,component:r.value}})),wn=async()=>await pe.default.prompt([{type:"list",name:"component",message:"What do you want to add?",choices:[new pe.default.Separator(de.default.bold("Provider")),...yn("provider",pt()),new pe.default.Separator(de.default.bold("Integration")),...yn("integration",ct()),new pe.default.Separator(de.default.bold("Resource")),{name:de.default.blueBright(" .  Add new resource"),value:{group:"resource",component:"resource"}}],pageSize:25}]);var De=a("commander");var Ia=async e=>{let t=e;t||(t=(await fn()).id);let r=H.find(n=>n.id===t);r&&await r.runTransformer()},Pn=new De.Command("integration").addArgument(new De.Argument("[name]","Name of the integration").choices(H.map(e=>e.id))).action(Ia);var je=a("commander");var xa=async(e,t)=>{if(!e.length){let{providers:r,providersPath:n}=await vn();return le(r,n)}le(e,t.path)},In=new je.Command("provider").addArgument(new je.Argument("[providers...]","Create provider(s)").choices(re.map(e=>e.id)).default([])).option("-p, --path [path]","Path to generate providers").action(xa);var $e=a("commander");var ba=async(e,t,r)=>{X({actions:t==null?void 0:t.actions,path:r.optsWithGlobals().path},e)},xn=new $e.Command("resource").addArgument(new $e.Argument("[resources...]","Create new resource(s)")).option("-p, --path [path]","Path to generated resource files").option("-a, --actions [actions]","Only generate the specified resource actions. (ex: list,create,edit,show)","list,create,edit,show").action(ba);var Ea=e=>e.command("add").description("Add new resources, providers, or integrations").allowExcessArguments(!1).action(Ra).addCommand(xn).addCommand(In).addCommand(Pn),Ra=async()=>{let{component:e}=await wn();if(e.group==="provider"&&le([e.component]),e.group==="integration"){let t=H.find(r=>r.id===e.component);await(t==null?void 0:t.runTransformer())}e.group==="resource"&&await X({},[])},bn=Ea;var En=l(a("envinfo")),Rn=l(a("os")),Ca=()=>{let e=Rn.default.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},Cn=async()=>{let[e,t]=await En.default.helpers.getOSInfo();return{name:Ca(),version:t}};var Tn=l(a("node-fetch")),Ta=async()=>{let e=await Cn();return{nodeEnv:O.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await Y()||[],projectFramework:w(),projectId:Pt()}},An=async()=>{if(O.REFINE_NO_TELEMETRY!=="true")try{let e=await Ta();await(0,Tn.default)("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};var kn=l(a("gray-matter")),On=l(a("boxen"));var Aa="https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md",mt="---announcement",ka=e=>e.split(mt).slice(1).map(r=>`${mt}${r}`),Oa=e=>{let t=e.replace(mt,"---"),r=(0,kn.default)(t),n=(r.content.length===0?t.replace(/---/g,""):r.content.replace(/---/g,"")).trim();return{...r.data,content:n}},Sa=async()=>{try{let e=await fetch(Aa).then(r=>r.text()).catch(()=>"");return ka(e).map(r=>Oa(r))}catch{return[]}},Sn=async()=>{let t=(await Sa()).filter(n=>!n.hidden);if(t.length===0)return;let r=t.map(n=>{let o=t.length>1?"\u2014 ":"",i=ke(n.content);return`${o}${i}`}).join("").trim();console.log((0,On.default)(r,{padding:1,margin:0,borderStyle:"round",borderColor:"blueBright",titleAlignment:"left"}))};var Na="1.0.0",_a=()=>{let e=new Nn.Command;e.version(`@refinedev/cli@${Na}`,"-v, --version","Output the current version.").description(_n.default.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),Zr(e),Ft(e),nn(e),Ze(e),et(e),We(e),rt(e),Ot(e),sn(e),Vt(e),Cr(e),bn(e),e.hook("preAction",async t=>{t.args.includes("dev")&&await Sn()}),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||An()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};_a();})();
//# sourceMappingURL=cli.js.map