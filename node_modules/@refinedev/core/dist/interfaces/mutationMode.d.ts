import { BaseRecord, GetListResponse, GetOneResponse, IQueryKeys } from "../interfaces";
import { QueryKey } from "@tanstack/react-query";
export declare type MutationMode = "pessimistic" | "optimistic" | "undoable";
export declare type QueryResponse<T = BaseRecord> = GetListResponse<T> | GetOneResponse<T>;
export declare type PreviousQuery<TData> = [QueryKey, TData | unknown];
export declare type PrevContext<TData> = {
    previousQueries: PreviousQuery<TData>[];
    /**
     * @deprecated `QueryKeys` is deprecated in favor of `keys`. Please use `keys` instead to construct query keys for queries and mutations.
     */
    queryKey: IQueryKeys;
};
export declare type Context = {
    previousQueries: ContextQuery[];
};
export declare type ContextQuery<T = BaseRecord> = {
    query: QueryResponse<T>;
    queryKey: QueryKey;
};
//# sourceMappingURL=mutationMode.d.ts.map