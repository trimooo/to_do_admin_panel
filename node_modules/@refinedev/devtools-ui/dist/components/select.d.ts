declare type SelectCommonProps = {
    placeholder?: string;
    hint?: string;
    className?: string;
    options: {
        label: string;
        value: string;
    }[];
};
declare type SelectSingleProps = {
    type: "single";
    value?: string;
    onChange?: (value: string | undefined) => void;
};
declare type SelectMultiProps = {
    type: "multiple";
    value?: string[];
    onChange?: (value: string[]) => void;
};
declare type SelectProps<TType extends "multiple" | "single"> = SelectCommonProps & (TType extends "multiple" ? SelectMultiProps : SelectSingleProps);
export declare const Select: <TType extends "single" | "multiple">({ type, options, placeholder, hint, value, onChange, className, }: SelectProps<TType>) => JSX.Element;
export {};
//# sourceMappingURL=select.d.ts.map